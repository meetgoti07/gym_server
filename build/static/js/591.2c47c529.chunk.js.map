{"version":3,"file":"static/js/591.2c47c529.chunk.js","mappings":"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","sources":["jsx/pages/Registration.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport logo from '../../images/logo-full.png'\r\n\r\nfunction Register(props) {\r\n    const [email, setEmail] = useState('');\r\n    let errorsObj = { email: '', password: '' };\r\n    const [errors, setErrors] = useState(errorsObj);\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUserName] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onSignUp = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validation logic (you can customize this)\r\n        if (!username || !email || !password) {\r\n            setErrors({ email: 'Please fill all the fields', password: '' });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const postData = {\r\n                username,\r\n                email,\r\n                password,\r\n            };\r\n\r\n            const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/register`, postData);\r\n        \r\n\r\n            // Handle the response from the server\r\n            console.log(response.data);\r\n\r\n            // Assuming you have a function to set success message\r\n            // props.setSuccessMessage(response.message);\r\n\r\n            // Redirect or do other actions upon successful registration\r\n            navigate(\"/login\", { replace: true });\r\n        } catch (error) {\r\n            // Handle errors from the server\r\n            console.error('Registration failed:', error.response.data);\r\n            setErrors({ email: '', password: error.response.data.error });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginTop: '300px' }} className='authincation h-100 p-meddle'>\r\n            <div className='container h-100'>\r\n                <div className='row justify-content-center h-100 align-items-center'>\r\n                    <div className='col-md-6'>\r\n                        <div className='authincation-content'>\r\n                            <div className='row no-gutters'>\r\n                                <div className='col-xl-12'>\r\n                                    <div className='auth-form'>\r\n                                        <div className='text-center mb-3'>\r\n                                            <img src={logo} alt=\"\" />\r\n                                        </div>\r\n\r\n                                        <h4 className='text-center mb-4 text-white'>Sign up your account</h4>\r\n                                        {props.errorMessage && (\r\n                                            <div className='bg-red-300 text-danger border border-red-900 p-1 my-2'>\r\n                                                {props.errorMessage}\r\n                                            </div>\r\n                                        )}\r\n                                        {props.successMessage && (\r\n                                            <div className='bg-green-300 text-danger text-green-900  p-1 my-2'>\r\n                                                {props.successMessage}\r\n                                            </div>\r\n                                        )}\r\n\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 text-white'>\r\n                                                <strong>Name</strong>\r\n                                            </label>\r\n                                            <input type=\"text\" className=\"form-control\"\r\n                                                value={username}\r\n                                                placeholder='Name'\r\n                                                onChange={(e) => setUserName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 text-white'>\r\n                                                <strong>Email</strong>\r\n                                            </label>\r\n                                            <input type=\"email\" className=\"form-control\"\r\n                                                value={email}\r\n                                                placeholder='email'\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                            />\r\n                                            {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label className='mb-1 text-white'>\r\n                                                <strong>Password</strong>\r\n                                            </label>\r\n                                            <input type=\"password\" className=\"form-control\"\r\n                                                value={password}\r\n                                                onChange={(e) =>\r\n                                                    setPassword(e.target.value)\r\n                                                }\r\n                                                placeholder='password'\r\n                                            />\r\n                                        </div>\r\n                                        {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n                                        <div className='text-center mt-4'>\r\n                                            <button onClick={onSignUp} type='submit' className='btn bg-white text-primary btn-block'>\r\n                                                Sign up\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <div className='new-account mt-3 text-white'>\r\n                                            <p>\r\n                                                Already have an account?{' '}\r\n                                                <Link className='text-white' to='/login'>\r\n                                                    Sign in\r\n                                                </Link>\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Register\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","password","_useState4","errors","setErrors","_useState5","_useState6","setPassword","_useState7","_useState8","username","setUserName","navigate","useNavigate","onSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","postData","response","wrap","_context","prev","next","preventDefault","abrupt","axios","post","concat","process","sent","console","log","data","replace","t0","error","stop","_x","apply","arguments","_jsx","style","marginTop","className","children","_jsxs","src","logo","alt","errorMessage","successMessage","type","value","placeholder","onChange","target","onClick","Link","to"],"sourceRoot":""}